{"version":3,"sources":["messages/messages-message.js"],"names":["window","Ractive","controller","component","data","el","config","done","_hideMessage","index","callback","words","Message","get","forEach","word","i","set","setTimeout","_displayMessage","message","lineCallback","length","split","map","display","out","DISPLAY_WORD_TIME","DISPLAY_TEXT_TIME","observe","args"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,WAAW,mBAAoB,SAASC,EAAWC,EAAMC,EAAIC,EAAQC,GASlF,QAASC,GAAaC,EAAOC,GAC3B,GAAc,IAAVD,EAGF,WAFAC,IAKF,IAAIC,GAAQC,EAAQC,IAAI,QAExBF,GAAMG,QAAQ,SAASC,EAAMC,GAC3BJ,EAAQK,IAAI,SAAWD,EAAI,SAAS,KAGtCE,WAAW,WACTR,KACC,KAGL,QAASS,GAAgBC,EAASX,EAAOC,EAAUW,GACjDb,EAAaC,EAAO,WAElB,GAAIW,EAAQE,QAAUb,EAKpB,YAJIC,GACFA,IAMJ,IAAIC,GAAQS,EAAQX,GAAOc,MAAM,KAAKC,IAAI,SAAST,GACjD,OACEA,KAAMA,EACNU,SAAS,EACTC,KAAK,IAITd,GAAQK,IAAI,QAASN,GAEjBU,GACFA,EAAaT,GAKfM,WAAW,WACTP,EAAMG,QAAQ,SAASC,EAAMC,GAE3BE,WAAW,WACTN,EAAQK,IAAI,SAAWD,EAAI,aAAa,IACvCW,EAAoBX,KAIzBE,WAAW,WAETT,IAEAS,WAAW,WACTC,EAAgBC,EAASX,EAAOC,EAAUW,IACzCO,IAEFD,EAAoBhB,EAAMW,OAAS,SArE5C,GAAIM,GAAoB,IACpBD,EAAoB,IAEpBf,EAAUT,GACZC,KAAMA,GAwERQ,GAAQiB,QAAQ,OAAQ,SAASC,GAC/BA,EAAOA,MACFA,EAAKV,UAIVU,EAAKV,QAA4B,gBAAXA,UAAuBU,EAAKV,SAAWU,EAAKV,QAElEF,WAAW,WAETC,EAAgBW,EAAKV,QAAS,EAAGU,EAAKpB,UAAY,KAAMoB,EAAKT,cAAgB,WAIjFd","file":"messages/messages-message.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  window.Ractive.controller('messages-message', function(component, data, el, config, done) {\r\n\r\n    var DISPLAY_TEXT_TIME = 3000,\r\n        DISPLAY_WORD_TIME = 150;\r\n\r\n    var Message = component({\r\n      data: data\r\n    });\r\n\r\n    function _hideMessage(index, callback) {\r\n      if (index === 0) {\r\n        callback();\r\n\r\n        return;\r\n      }\r\n\r\n      var words = Message.get('words');\r\n\r\n      words.forEach(function(word, i) {\r\n        Message.set('words[' + i + '].out', true);\r\n      });\r\n\r\n      setTimeout(function() {\r\n        callback();\r\n      }, 350);\r\n    }\r\n\r\n    function _displayMessage(message, index, callback, lineCallback) {\r\n      _hideMessage(index, function() {\r\n\r\n        if (message.length == index) {\r\n          if (callback) {\r\n            callback();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        var words = message[index].split(' ').map(function(word) {\r\n          return {\r\n            word: word,\r\n            display: false,\r\n            out: false\r\n          };\r\n        });\r\n\r\n        Message.set('words', words);\r\n\r\n        if (lineCallback) {\r\n          lineCallback(Message);\r\n        }\r\n\r\n        // Message.set('messageTop', (_$el.window.height() - _$el.message.outerHeight()) / 2);\r\n\r\n        setTimeout(function() {\r\n          words.forEach(function(word, i) {\r\n\r\n            setTimeout(function() {\r\n              Message.set('words[' + i + '].display', true);\r\n            }, DISPLAY_WORD_TIME * i);\r\n\r\n          });\r\n\r\n          setTimeout(function() {\r\n\r\n            index++;\r\n\r\n            setTimeout(function() {\r\n              _displayMessage(message, index, callback, lineCallback);\r\n            }, DISPLAY_TEXT_TIME);\r\n\r\n          }, DISPLAY_WORD_TIME * words.length + 350);\r\n\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n    Message.observe('play', function(args) {\r\n      args = args || {};\r\n      if (!args.message) {\r\n        return;\r\n      }\r\n\r\n      args.message = typeof message == 'string' ? [args.message] : args.message;\r\n\r\n      setTimeout(function() {\r\n\r\n        _displayMessage(args.message, 0, args.callback || null, args.lineCallback || null);\r\n      });\r\n    });\r\n\r\n    done();\r\n  });\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}